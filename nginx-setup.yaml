
- name: Deploy Nginx Ingress Controller with MetalLB 
  hosts: hosts
  tasks:

    - name: Copy get_ip_range.sh
      copy:
        src: ./nginx/get_ip_range.sh
        dest: /tmp/get_ip_range.sh 

    - name: Get IP range from Docker network
      shell: |
        chmod a+x /tmp/get_ip_range.sh 
        /tmp/get_ip_range.sh
      register: ip_range

    - name: Create MetalLB IPAddressPool YAML file
      copy:
        dest: /tmp/ip-pool.yaml
        content: |
          apiVersion: metallb.io/v1beta1
          kind: IPAddressPool
          metadata:
            name: first-pool
            namespace: metallb-system
          spec:
            addresses:
            - {{ ip_range.stdout }}
      
    - name: Copy metallb.yaml
      copy:
        src: ./nginx/metallb.yaml
        dest: /tmp/metallb.yaml 
              
    - name: Copy l2advertisement.yaml
      copy:
        src: ./nginx/l2advertisement.yaml
        dest: /tmp/l2advertisement.yaml 

    - name: Apply Metallb YAML file
      shell: |
        kubectl apply -f /tmp/metallb.yaml
      args:
        executable: /bin/bash

    - name: Get MetalLB pod names
      shell: kubectl get pods -n metallb-system -o jsonpath="{.items[*].metadata.name}"
      register: metallb_pods

    - name: Convert pod names to a list
      set_fact:
        pod_list: "{{ metallb_pods.stdout.split() }}"

    - name: Wait for each MetalLB pod to be ready
      shell: kubectl wait --for=condition=Ready pod/{{ item }} -n metallb-system --timeout=1h
      loop: "{{ pod_list }}"

    - name: Apply the rest of the Metallb YAML files
      shell: |
        kubectl -n metallb-system apply -f /tmp/ip-pool.yaml
        kubectl -n metallb-system apply -f /tmp/l2advertisement.yaml
      args:
        executable: /bin/bash
    
    - name: Delete nginx-ingress folder if exists
      file:
        path: "/tmp/nginx-ingress"
        state: absent

    - name: Check if Nginx Ingress is installed
      command: helm list -q
      register: helm_list

    - name: Pull the Nginx Ingress Helm chart
      command: helm pull oci://ghcr.io/nginxinc/charts/nginx-ingress --untar --version 1.1.3
      args:
        chdir: /tmp
      when: "'nginx-ingress' not in helm_list.stdout"

    - name: Apply CRDs for Nginx Ingress
      kubernetes.core.k8s:
        state: present
        src: /tmp/nginx-ingress/crds/{{ item }}
      loop: "{{ lookup('fileglob', '/tmp/nginx-ingress/crds/*.yaml', wantlist=True) }}"
      when: "'nginx-ingress' not in helm_list.stdout"

    - name: Install Nginx Ingress using Helm if not installed.
      command: helm install nginx-ingress oci://ghcr.io/nginxinc/charts/nginx-ingress --version 1.1.3
      when: "'nginx-ingress' not in helm_list.stdout"
  
    - name: Copy jfrog-ingress.yaml
      copy:
        src: ./nginx/jfrog-ingress.yaml
        dest: /tmp/jfrog-ingress.yaml

    - name: Apply the rest of the Metallb YAML files
      shell: 
        kubectl apply -f /tmp/jfrog-ingress.yaml
      args:
        executable: /bin/bash
          
    - name: Get the IP of the Ingress Controller
      command: kubectl get svc nginx-ingress-controller -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: ingress_ip_address

    - name: Add the URL entry to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ingress_ip_address.stdout }} tomer-jfrog.octopus.lab"
        state: present
        create: yes
        regexp: '^{{ ingress_ip_address.stdout }}\s+tomer-jfrog\.octopus\.lab'

